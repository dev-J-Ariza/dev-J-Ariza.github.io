<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>J-Ariza的点滴</title><link>http://dev-J-Ariza.github.io/</link><description>Recent content on J-Ariza的点滴</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 04 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="http://dev-J-Ariza.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Bing壁纸预览及下载</title><link>http://dev-J-Ariza.github.io/p/bing%E5%A3%81%E7%BA%B8%E9%A2%84%E8%A7%88%E5%8F%8A%E4%B8%8B%E8%BD%BD/</link><pubDate>Sat, 04 Sep 2021 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/bing%E5%A3%81%E7%BA%B8%E9%A2%84%E8%A7%88%E5%8F%8A%E4%B8%8B%E8%BD%BD/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/bing%E5%A3%81%E7%BA%B8%E9%A2%84%E8%A7%88%E5%8F%8A%E4%B8%8B%E8%BD%BD/screenshot.png" alt="Featured image of post Bing壁纸预览及下载" />&lt;h1 id="简介">简介&lt;/h1>
&lt;p>这是一个桌面端的程序，可以浏览Bing中文区官网上最近7天的壁纸，并且提供了下载高清版壁纸的功能。&lt;/p>
&lt;p>项目地址： &lt;a class="link" href="https://github.com/dev-J-Ariza/BingWallpaperPreview" target="_blank" rel="noopener"
>https://github.com/dev-J-Ariza/BingWallpaperPreview&lt;/a>&lt;/p>
&lt;h1 id="实现">实现&lt;/h1>
&lt;h2 id="技术栈">技术栈&lt;/h2>
&lt;p>使用Tkinter开发gui，使用requests进行网络请求。&lt;/p>
&lt;h2 id="工程结构">工程结构&lt;/h2>
&lt;ul>
&lt;li>main.py - 程序的入口，运行主函数即可。&lt;/li>
&lt;li>endpoint.py - 网络请求的工具类，主要负责请求Bing壁纸，并对返回结果进行解析。&lt;/li>
&lt;li>gui.py - 提供下载、前后查找功能，用户可以一张张翻看最近7天的壁纸，并且下载。&lt;/li>
&lt;/ul>
&lt;h2 id="源码分析">源码分析&lt;/h2>
&lt;p>首先我们先看负责网络请求的endpoint.py，&lt;/p>
&lt;ol>
&lt;li>去哪获取Bing壁纸&lt;/li>
&lt;/ol>
&lt;p>&lt;a class="link" href="https://cn.bing.com/HPImageArchive.aspx?format=js&amp;amp;idx=%7bcur%7d&amp;amp;n=1&amp;amp;mkt=zh-CN" target="_blank" rel="noopener"
>https://cn.bing.com/HPImageArchive.aspx?format=js&amp;idx={cur}&amp;n=1&amp;mkt=zh-CN&lt;/a> 这个就是官方提供的接口，用来获取要查找的壁纸的url。
也就是说，请求这个接口，得到的结果是一个指向壁纸的url。 其中cur=0表示请求今天的， cur=1表示请求前一天的，以此类推。&lt;/p>
&lt;ol start="2">
&lt;li>如何解析出图片&lt;/li>
&lt;/ol>
&lt;p>当获取到壁纸url后，可以通过requests发出请求得到图片的数据，然后写到io管道里面。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="k">def&lt;/span> &lt;span class="nf">get_single_image_stream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_url&lt;/span>&lt;span class="p">):&lt;/span>
&lt;span class="n">image_bytes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">requests&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">img_url&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">content&lt;/span>
&lt;span class="n">data_stream&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BytesIO&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">image_bytes&lt;/span>&lt;span class="p">)&lt;/span>
&lt;span class="k">return&lt;/span> &lt;span class="n">data_stream&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接着我们再看用户图形界面部分
3. gui组成&lt;/p>
&lt;p>我们使用Tkinter来编写gui部分， Window表示某个应用程序的窗口，是Tkinter里面用来承载一切组件的基础，所以最底层是Window。
在这之上我们就直接展示壁纸，使用Canvas组件负责展示，所以第二层是Canvas。
接着，需要为用户提供操作按钮，方便用户查看前一张/后一张/下载图片，所以需要用一个Frame来盛放各个按钮，这个frame在canvas之上。
最后，就是各个具体按钮。&lt;/p>
&lt;p>Window -&amp;gt; Canvas -&amp;gt; Frame -&amp;gt; Button&lt;/p>
&lt;ol start="4">
&lt;li>如何展示出壁纸&lt;/li>
&lt;/ol>
&lt;p>Canvas是画布的意思，可以用来在屏幕上的某个区域展示图形，这个图形可以是纯色背景，也可以是各种格式的文件。 这点很想Android中的Canvas，
Android.Canvas提供了各种drawXX()方法，用户还可以自己去画出各种形状。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="n">canvas&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_image&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">450&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">300&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">image&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_image&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">image_url&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>get_image返回的是一个图片控件，放在Canvas里，内容是image_url指向的壁纸。&lt;/p>
&lt;ol start="5">
&lt;li>下载&lt;/li>
&lt;/ol>
&lt;p>下载的本质就是写文件的IO操作，需要指定保存路径，并且需要数据内容。 保存路径通常是用户自己决定的，所以提供一个对话框，用户可以指定保存
路径。这个Tkinter有现成的方法，&lt;code>filedialog.asksaveasfile()&lt;/code> 可以参考文档使用。
数据内容也好说，就是接口请求url后，得到的放回数据。&lt;/p>
&lt;p>真正保存图片的写操作python也提供了封装好的方法， &lt;code>image.save(path)&lt;/code>.&lt;/p>
&lt;p>最后，使用缓存提高效率&lt;/p>
&lt;ol start="6">
&lt;li>缓存的使用&lt;/li>
&lt;/ol>
&lt;p>当用户前后查找图片时，假设当前图片是A，前一张是B，用户可能的操作路径是 A-B-A。 那么当用户反复横跳时，如果能将已经请求过的图片缓存下来，
就可以避免重复的网络请求，省时省流量。&lt;/p>
&lt;p>这里的解决方案就是python自带的缓存框架，LRU_Cache. 我们以每张图片的url作为缓存的key， 壁纸图片作为value。这样当遇到相同的url时，
就可以直接从缓存中取出图片并展示了。&lt;/p>
&lt;h1 id="感受">感受&lt;/h1>
&lt;p>写点python脚本还是挺有意思的，而且在日常挺有用的，比如这个Bing下载图片的脚本、之前写的公交实时查询。 之后还会再找点日常有用的功能，
写成脚本。&lt;/p></description></item><item><title>python实现北京公交实时查询</title><link>http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/bus.jpg" alt="Featured image of post python实现北京公交实时查询" />&lt;h1 id="起源">起源&lt;/h1>
&lt;p>我最近在学习python，学的过程中打算完成个小的项目。于是在网络搜索关键词“python入门项目”，在所有的结果中出现了【查询实时公交路线】这个api，个人
感觉既简单又有些意思。 &lt;del>（谁知这个api最后早就过期了。。这也是开发过程中一个稍显麻烦的地方。）&lt;/del>&lt;/p>
&lt;p>本文通过一下3个部分介绍实现过程，&lt;/p>
&lt;ol>
&lt;li>搜索（捡现成的）&lt;/li>
&lt;li>工程结构以及具体实现&lt;/li>
&lt;li>上传到pypi&lt;/li>
&lt;/ol>
&lt;h2 id="搜索">搜索&lt;/h2>
&lt;p>作为python菜鸟，还是像观摩一下前辈们的用法以及产出效果。 开发过程中我主要参考的是
&lt;a class="link" href="https://segmentfault.com/a/1190000014324320" target="_blank" rel="noopener"
>Python实现命令行监控北京实时公交之一&lt;/a>。
此文涉及到网络请求，结果缓存（这个我没想到，而且作者实现的方式也很简洁），结果输出（对命令行的排版），可以看到内容还是很丰富的。&lt;/p>
&lt;p>前面说到之前网上搜索的api不能用了，于是就开始了各种尝试，先去了各大免费api平台看有无现成的，结果自然是没有。要么就是一个小网站还要注册，还不保险。
最后是在github上面检索到的，输入关键字 ‘beijing bus’， 并且按照 &lt;strong>时间倒叙查找&lt;/strong>， 终于找到了某位大佬的小作业，里面还有请求实时公交的过程，
我试了一下，疗效不错。 链接在此，
&lt;a class="link" href="https://github.com/Zoutianjian/Beijing_Bus_realtime_query" target="_blank" rel="noopener"
>Zoutianjian/Beijing_Bus_realtime_query&lt;/a>&lt;/p>
&lt;h2 id="工程结构以及具体实现">工程结构以及具体实现&lt;/h2>
&lt;h3 id="项目结构">项目结构&lt;/h3>
&lt;p>为了开发的规范性，写代码之前要设计好项目结构。对python项目来说，这个也是有规范可以依据的。
&lt;a class="link" href="https://cloud.tencent.com/developer/article/1175298" target="_blank" rel="noopener"
>python 软件目录结构规范&lt;/a>.
简单来说，最外层目录是项目根目录用项目命名，在它下面建立一个同名文件夹，真正的开发代码放在这里面。&lt;/p>
&lt;p>同级建立tests目录，存放单元测试代码。&lt;/p>
&lt;p>同级建立 requirements.txt 里面写入所有你用到的第三方包，这样当别人clone你的项目运行时，只需要 &lt;code>pip install -r requirements.txt&lt;/code> 就可以
安装所有需要的包了。&lt;/p>
&lt;p>如果打算上传到pypi，则需要setup.py&lt;/p>
&lt;p>如果用到流水线，则在项目根目录根据各种CI的要求放置配置文件，我这里用的是 .travis.yml. (这个后面也许会单独写个文章简述流水线配置，真的太烦了，
我项目一半以上的提交用来配置流水线了。。)&lt;/p>
&lt;pre>&lt;code>Foo(根目录，git目录)/
|
|-- foo(项目源码)/
| |
| |-- __init__.py
| |-- main.py
|-- tests(单元测试代码)/
| |
| |-- __init__.py
| |-- test**.py
|
|-- docs/
| |-- conf.py
| |-- abc.rst
|
|-- setup.py
|-- requirements.txt
|-- README.md
&lt;/code>&lt;/pre>
&lt;p>最后类似长这个样子。&lt;/p>
&lt;h3 id="项目核心代码">项目核心代码&lt;/h3>
&lt;p>首先明确需求，当用户输入某条线路代码时，列出双向所有的站点。 如果用户进一步确认了方向，则显示这路车在这个方向上的所有车的到站情况。
这样需要做的事情就明确了，&lt;/p>
&lt;ul>
&lt;li>需要请求网络部分，用来查找公交的具体情况。&lt;/li>
&lt;li>需要缓存部分，如果用户输入间隔时间较短，就不必在请求网络。&lt;/li>
&lt;li>需要一个对用户友好的输入输出界面，命令行也能做到。&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>网络请求&lt;/li>
&lt;/ol>
&lt;p>&lt;figure style="flex-grow: 597; flex-basis: 1434px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_214615.png" data-size="1423x238">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_214615.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_214615_hu37807bfab18d2b33c7a4f98f374825a9_37698_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_214615_hu37807bfab18d2b33c7a4f98f374825a9_37698_1024x0_resize_box_3.png 1024w"
width="1423"
height="238"
loading="lazy"
alt="所有用到的接口">
&lt;/a>
&lt;figcaption>所有用到的接口&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>MAIN_URL1 用来获取北京市所有的公交线路。 返回的结果并不是json类型的，所以使用正则表达式&lt;code>&amp;lt;a href=&amp;quot;javascript:;&amp;quot;&amp;gt;(\\d+)&amp;lt;/a&amp;gt;&lt;/code>来提取。
&lt;figure style="flex-grow: 406; flex-basis: 974px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_215830.png" data-size="1218x300">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_215830.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_215830_hu7997d9c266ced89cb17cc7b79f7758e3_29723_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_215830_hu7997d9c266ced89cb17cc7b79f7758e3_29723_1024x0_resize_box_3.png 1024w"
width="1218"
height="300"
loading="lazy"
alt="请求所有线路">
&lt;/a>
&lt;figcaption>请求所有线路&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>最后保存的结果如下图所示
&lt;figure style="flex-grow: 104; flex-basis: 249px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220046.png" data-size="594x571">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220046.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220046_hu7118cfc31e2ba4c649da3adf24fed982_14054_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220046_hu7118cfc31e2ba4c649da3adf24fed982_14054_1024x0_resize_box_3.png 1024w"
width="594"
height="571"
loading="lazy"
alt="bus.txt">
&lt;/a>
&lt;figcaption>bus.txt&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;hr>
&lt;p>LINE_URL 用来获取某条路线的所有站点。 但是在请求网络之前，我们先判断用户对同一线路的请求间隔是否在24h以内，如果是，那么就从缓存中取出站点信息。
&lt;figure style="flex-grow: 353; flex-basis: 848px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220205.png" data-size="1007x285">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220205.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220205_hu0470b50709489b5b09a96e819d18b698_25831_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220205_hu0470b50709489b5b09a96e819d18b698_25831_1024x0_resize_box_3.png 1024w"
width="1007"
height="285"
loading="lazy"
alt="读取缓存">
&lt;/a>
&lt;figcaption>读取缓存&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>这个接口返回的数据是json类型，直接使用python自带的json包进行解析即可，这里注意，要保存住&lt;code>lineid&lt;/code>, &lt;code>linename&lt;/code>等关键信息，因为后面的实时查询接口要用到。
&lt;figure style="flex-grow: 399; flex-basis: 957px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220709.png" data-size="1265x317">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220709.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220709_hu03fe7d7569fa5113185ef7701f7d4846_36409_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220709_hu03fe7d7569fa5113185ef7701f7d4846_36409_1024x0_resize_box_3.png 1024w"
width="1265"
height="317"
loading="lazy"
alt="获取站点信息">
&lt;/a>
&lt;figcaption>获取站点信息&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;hr>
&lt;p>接下来就是让用户输入方向，最后输出这个方向上的所有站点并保存。 这里用到了 STATION_URL，这个接口是需要传入请求参数的。
&lt;figure style="flex-grow: 344; flex-basis: 827px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220850.png" data-size="1024x297">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220850.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220850_hua6de685b1456931db90217e7da11c473_28752_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_220850_hua6de685b1456931db90217e7da11c473_28752_1024x0_resize_box_3.png 1024w"
width="1024"
height="297"
loading="lazy"
alt="获取单向站点信息">
&lt;/a>
&lt;figcaption>获取单向站点信息&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>最终保存的结果如下，
&lt;figure style="flex-grow: 90; flex-basis: 216px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221011.png" data-size="929x1029">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221011.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221011_hu9e3ba0f3e85e2a5fa7dc16a44b98e977_57833_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221011_hu9e3ba0f3e85e2a5fa7dc16a44b98e977_57833_1024x0_resize_box_3.png 1024w"
width="929"
height="1029"
loading="lazy"
alt="all_station.txt">
&lt;/a>
&lt;figcaption>all_station.txt&lt;/figcaption>
&lt;/figure>
其中，time字段是保存时间用来判断是否读缓存； line_ids是这条路线双向的路线编码； data里面保存的就是某条方向中的站点列表，每个站点实体都需要记录
&lt;code>stationId&lt;/code>, &lt;code>stopNumber&lt;/code> 信息，同样是为了后续的实时查询使用&lt;/p>
&lt;hr>
&lt;p>最后，REAL_TIME_URL 负责查看某条公交线路的实时情况。&lt;/p>
&lt;p>这个接口的请求参数需要token，打开 &lt;a class="link" href="http://www.bjbus.com/home/fun_rtbus.php?uSec=00000160&amp;amp;uSub=00000162" target="_blank" rel="noopener"
>http://www.bjbus.com/home/fun_rtbus.php?uSec=00000160&amp;uSub=00000162&lt;/a>&lt;br>
可以通过F12或者抓包等各种方法得到。 为了输出所有正在运行中的公交，我们将待查询的站点硬编码为这个方向上的最后一站，这样在这个
接口的返回结果里面，就会包括前面各站的到站信息，也就是是否有车在周围。
&lt;figure style="flex-grow: 169; flex-basis: 407px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221927.png" data-size="1302x767">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221927.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221927_hu37d0985520172e708c48b0e1a988fe9d_79421_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/2021-07-17_221927_hu37d0985520172e708c48b0e1a988fe9d_79421_1024x0_resize_box_3.png 1024w"
width="1302"
height="767"
loading="lazy"
alt="实时公交请求方法">
&lt;/a>
&lt;figcaption>实时公交请求方法&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;h3 id="命令行输出结果">命令行输出结果&lt;/h3>
&lt;p>命令行的结果也是可以有颜色的！ 我们引入 colorama 这个包，来上色。 其中红色的站点表示此站有车，如果你不在的话就会错过。
&lt;figure style="flex-grow: 102; flex-basis: 247px">
&lt;a href="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/real_time_bus.png" data-size="689x669">&lt;img src="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/real_time_bus.png"
srcset="http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/real_time_bus_hue39bfa88bbbeb89743d398e519e74bd5_18249_480x0_resize_box_3.png 480w, http://dev-J-Ariza.github.io/p/python%E5%AE%9E%E7%8E%B0%E5%8C%97%E4%BA%AC%E5%85%AC%E4%BA%A4%E5%AE%9E%E6%97%B6%E6%9F%A5%E8%AF%A2/real_time_bus_hue39bfa88bbbeb89743d398e519e74bd5_18249_1024x0_resize_box_3.png 1024w"
width="689"
height="669"
loading="lazy"
alt="效果图1">
&lt;/a>
&lt;figcaption>效果图1&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>另外，python也可以输出程序中定义好的__doc__. 可以看一下项目源码。&lt;/p>
&lt;h2 id="打包上传到pypi">打包上传到pypi&lt;/h2>
&lt;p>这一步的产出结果可以让所有python开发者都可以使用你的代码，只需要进行标准的pip install.&lt;/p>
&lt;p>上传也是通过python命令行进行的，因此需要做一些准备工作。具体可以搜索一下。
我在这一步遇到了一些问题，就是项目中的txt文件传不上去。 折腾了半天，在StackOverflow上面找到了答案。 在 MANIFEST.in 文件里面写入你需要的txt，
并且在 setup.py 中， include_package_data=True。&lt;/p>
&lt;p>希望大家这一步会很顺利。&lt;/p>
&lt;h2 id="使用">使用&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>在命令行中 &lt;code>pip install moniter-bus-peking&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在项目里面， &lt;code>from moniter_bus import bus&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查找公交站点 &lt;code>bus.get_station(509)&lt;/code> 509可以换成其他路线。&lt;/p>
&lt;p>查找实时公交 &lt;code>bus.get_real_time_bus(509)&lt;/code>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>直接在命令行中按照提示输入方向，就可以看到结果。&lt;/p>
&lt;h1 id="结尾">结尾&lt;/h1>
&lt;p>欢迎 pip install.&lt;/p>
&lt;p>欢迎到repo里面提issue， &lt;a class="link" href="https://github.com/dev-J-Ariza/moniter_bus" target="_blank" rel="noopener"
>项目源码&lt;/a>&lt;/p>
&lt;p>感谢开源世界，
&lt;a class="link" href="https://segmentfault.com/a/1190000014324320" target="_blank" rel="noopener"
>Python实现命令行监控北京实时公交之一&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/Zoutianjian/Beijing_Bus_realtime_query" target="_blank" rel="noopener"
>Zoutianjian/Beijing_Bus_realtime_query&lt;/a>&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p></description></item><item><title>Chinese Test</title><link>http://dev-J-Ariza.github.io/p/test-chinese/</link><pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/test-chinese/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg" alt="Featured image of post Chinese Test" />&lt;h2 id="正文测试">正文测试&lt;/h2>
&lt;p>而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。&lt;/p>
&lt;p>奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。&lt;/p>
&lt;h2 id="引用">引用&lt;/h2>
&lt;blockquote>
&lt;p>思念是最暖的忧伤像一双翅膀&lt;br>
让我停不了飞不远在过往游荡&lt;br>
不告而别的你 就算为了我着想&lt;br>
这么沉痛的呵护 我怎么能翱翔&lt;/p>
&lt;p>&lt;em>&lt;a class="link" href="https://www.youtube.com/watch?v=3aypp_YlBzI" target="_blank" rel="noopener"
>最暖的憂傷 - 田馥甄&lt;/a>&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h2 id="图片">图片&lt;/h2>
&lt;p>&lt;figure style="flex-grow: 66; flex-basis: 160px">
&lt;a href="http://dev-J-Ariza.github.io/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash.jpg" data-size="667x1000">&lt;img src="http://dev-J-Ariza.github.io/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash.jpg"
srcset="http://dev-J-Ariza.github.io/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_480x0_resize_q75_box.jpg 480w, http://dev-J-Ariza.github.io/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_1024x0_resize_q75_box.jpg 1024w"
width="667"
height="1000"
loading="lazy"
alt="Photo by Florian Klauer on Unsplash">
&lt;/a>
&lt;figcaption>Photo by Florian Klauer on Unsplash&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 149; flex-basis: 359px">
&lt;a href="http://dev-J-Ariza.github.io/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash.jpg" data-size="1000x667">&lt;img src="http://dev-J-Ariza.github.io/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash.jpg"
srcset="http://dev-J-Ariza.github.io/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_480x0_resize_q75_box.jpg 480w, http://dev-J-Ariza.github.io/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_1024x0_resize_q75_box.jpg 1024w"
width="1000"
height="667"
loading="lazy"
alt="Photo by Luca Bravo on Unsplash">
&lt;/a>
&lt;figcaption>Photo by Luca Bravo on Unsplash&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;p>&lt;figure style="flex-grow: 133; flex-basis: 320px">
&lt;a href="http://dev-J-Ariza.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg" data-size="1000x750">&lt;img src="http://dev-J-Ariza.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg"
srcset="http://dev-J-Ariza.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_480x0_resize_q75_box.jpg 480w, http://dev-J-Ariza.github.io/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_1024x0_resize_q75_box.jpg 1024w"
width="1000"
height="750"
loading="lazy"
alt="Photo by Helena Hertz on Unsplash">
&lt;/a>
&lt;figcaption>Photo by Helena Hertz on Unsplash&lt;/figcaption>
&lt;/figure> &lt;figure style="flex-grow: 66; flex-basis: 160px">
&lt;a href="http://dev-J-Ariza.github.io/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg" data-size="667x1000">&lt;img src="http://dev-J-Ariza.github.io/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg"
srcset="http://dev-J-Ariza.github.io/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_480x0_resize_q75_box.jpg 480w, http://dev-J-Ariza.github.io/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_1024x0_resize_q75_box.jpg 1024w"
width="667"
height="1000"
loading="lazy"
alt="Photo by Hudai Gayiran on Unsplash">
&lt;/a>
&lt;figcaption>Photo by Hudai Gayiran on Unsplash&lt;/figcaption>
&lt;/figure>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-markdown" data-lang="markdown">![&lt;span class="nt">Photo by Florian Klauer on Unsplash&lt;/span>](&lt;span class="na">florian-klauer-nptLmg6jqDo-unsplash.jpg&lt;/span>) ![&lt;span class="nt">Photo by Luca Bravo on Unsplash&lt;/span>](&lt;span class="na">luca-bravo-alS7ewQ41M8-unsplash.jpg&lt;/span>)
![&lt;span class="nt">Photo by Helena Hertz on Unsplash&lt;/span>](&lt;span class="na">helena-hertz-wWZzXlDpMog-unsplash.jpg&lt;/span>) ![&lt;span class="nt">Photo by Hudai Gayiran on Unsplash&lt;/span>](&lt;span class="na">hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>相册语法来自 &lt;a class="link" href="https://typlog.com/" target="_blank" rel="noopener"
>Typlog&lt;/a>&lt;/p></description></item><item><title>Markdown Syntax Guide</title><link>http://dev-J-Ariza.github.io/p/markdown-syntax-guide/</link><pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/markdown-syntax-guide/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post Markdown Syntax Guide" />&lt;p>This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p>
&lt;h2 id="headings">Headings&lt;/h2>
&lt;p>The following HTML &lt;code>&amp;lt;h1&amp;gt;&lt;/code>—&lt;code>&amp;lt;h6&amp;gt;&lt;/code> elements represent six levels of section headings. &lt;code>&amp;lt;h1&amp;gt;&lt;/code> is the highest section level while &lt;code>&amp;lt;h6&amp;gt;&lt;/code> is the lowest.&lt;/p>
&lt;h1 id="h1">H1&lt;/h1>
&lt;h2 id="h2">H2&lt;/h2>
&lt;h3 id="h3">H3&lt;/h3>
&lt;h4 id="h4">H4&lt;/h4>
&lt;h5 id="h5">H5&lt;/h5>
&lt;h6 id="h6">H6&lt;/h6>
&lt;h2 id="paragraph">Paragraph&lt;/h2>
&lt;p>Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.&lt;/p>
&lt;p>Itatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.&lt;/p>
&lt;h2 id="blockquotes">Blockquotes&lt;/h2>
&lt;p>The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a &lt;code>footer&lt;/code> or &lt;code>cite&lt;/code> element, and optionally with in-line changes such as annotations and abbreviations.&lt;/p>
&lt;h4 id="blockquote-without-attribution">Blockquote without attribution&lt;/h4>
&lt;blockquote>
&lt;p>Tiam, ad mint andaepu dandae nostion secatur sequo quae.
&lt;strong>Note&lt;/strong> that you can use &lt;em>Markdown syntax&lt;/em> within a blockquote.&lt;/p>
&lt;/blockquote>
&lt;h4 id="blockquote-with-attribution">Blockquote with attribution&lt;/h4>
&lt;blockquote>
&lt;p>Don&amp;rsquo;t communicate by sharing memory, share memory by communicating.&lt;!-- raw HTML omitted -->
— &lt;!-- raw HTML omitted -->Rob Pike&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>&lt;!-- raw HTML omitted -->&lt;/p>
&lt;/blockquote>
&lt;h2 id="tables">Tables&lt;/h2>
&lt;p>Tables aren&amp;rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Name&lt;/th>
&lt;th>Age&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Bob&lt;/td>
&lt;td>27&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alice&lt;/td>
&lt;td>23&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="inline-markdown-within-tables">Inline Markdown within tables&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Italics&lt;/th>
&lt;th>Bold&lt;/th>
&lt;th>Code&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;em>italics&lt;/em>&lt;/td>
&lt;td>&lt;strong>bold&lt;/strong>&lt;/td>
&lt;td>&lt;code>code&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="code-blocks">Code Blocks&lt;/h2>
&lt;h4 id="code-block-with-backticks">Code block with backticks&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Example HTML5 Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="code-block-indented-with-four-spaces">Code block indented with four spaces&lt;/h4>
&lt;pre>&lt;code>&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
&amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
&amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>
&lt;h4 id="code-block-with-hugos-internal-highlight-shortcode">Code block with Hugo&amp;rsquo;s internal highlight shortcode&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="cp">&amp;lt;!doctype html&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span> &lt;span class="na">lang&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;en&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">charset&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;utf-8&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Example HTML5 Document&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">title&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>Test&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">p&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="list-types">List Types&lt;/h2>
&lt;h4 id="ordered-list">Ordered List&lt;/h4>
&lt;ol>
&lt;li>First item&lt;/li>
&lt;li>Second item&lt;/li>
&lt;li>Third item&lt;/li>
&lt;/ol>
&lt;h4 id="unordered-list">Unordered List&lt;/h4>
&lt;ul>
&lt;li>List item&lt;/li>
&lt;li>Another item&lt;/li>
&lt;li>And another item&lt;/li>
&lt;/ul>
&lt;h4 id="nested-list">Nested list&lt;/h4>
&lt;ul>
&lt;li>Fruit
&lt;ul>
&lt;li>Apple&lt;/li>
&lt;li>Orange&lt;/li>
&lt;li>Banana&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dairy
&lt;ul>
&lt;li>Milk&lt;/li>
&lt;li>Cheese&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="other-elements--abbr-sub-sup-kbd-mark">Other Elements — abbr, sub, sup, kbd, mark&lt;/h2>
&lt;p>&lt;!-- raw HTML omitted -->GIF&lt;!-- raw HTML omitted --> is a bitmap image format.&lt;/p>
&lt;p>H&lt;!-- raw HTML omitted -->2&lt;!-- raw HTML omitted -->O&lt;/p>
&lt;p>X&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted --> + Y&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted --> = Z&lt;!-- raw HTML omitted -->n&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>Press &lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->CTRL&lt;!-- raw HTML omitted -->+&lt;!-- raw HTML omitted -->ALT&lt;!-- raw HTML omitted -->+&lt;!-- raw HTML omitted -->Delete&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted --> to end the session.&lt;/p>
&lt;p>Most &lt;!-- raw HTML omitted -->salamanders&lt;!-- raw HTML omitted --> are nocturnal, and hunt for insects, worms, and other small creatures.&lt;/p>
&lt;section class="footnotes" role="doc-endnotes">
&lt;hr>
&lt;ol>
&lt;li id="fn:1" role="doc-endnote">
&lt;p>The above quote is excerpted from Rob Pike&amp;rsquo;s &lt;a class="link" href="https://www.youtube.com/watch?v=PAAkCSZUG1c" target="_blank" rel="noopener"
>talk&lt;/a> during Gopherfest, November 18, 2015.&amp;#160;&lt;a href="#fnref:1" class="footnote-backref" role="doc-backlink">&amp;#x21a9;&amp;#xfe0e;&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/section></description></item><item><title>Rich Content</title><link>http://dev-J-Ariza.github.io/p/rich-content/</link><pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/rich-content/</guid><description>&lt;p>Hugo ships with several &lt;a class="link" href="https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes" target="_blank" rel="noopener"
>Built-in Shortcodes&lt;/a> for rich content, along with a &lt;a class="link" href="https://gohugo.io/about/hugo-and-gdpr/" target="_blank" rel="noopener"
>Privacy Config&lt;/a> and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p>
&lt;hr>
&lt;h2 id="youtube-privacy-enhanced-shortcode">YouTube Privacy Enhanced Shortcode&lt;/h2>
&lt;div class="video-wrapper">
&lt;iframe loading="lazy"
src="https://www.youtube.com/embed/ZJthWmvUzzc"
allowfullscreen
title="YouTube Video"
>
&lt;/iframe>
&lt;/div>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="twitter-simple-shortcode">Twitter Simple Shortcode&lt;/h2>
&lt;style type="text/css">
.twitter-tweet {
font: 14px/1.45 -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif;
border-left: 4px solid #2b7bb9;
padding-left: 1.5em;
color: #555;
}
.twitter-tweet a {
color: #2b7bb9;
text-decoration: none;
}
blockquote.twitter-tweet a:hover,
blockquote.twitter-tweet a:focus {
text-decoration: underline;
}
&lt;/style>
&lt;blockquote class="twitter-tweet">&lt;p lang="en" dir="ltr">“In addition to being more logical, asymmetry has the advantage that its complete appearance is far more optically effective than symmetry.”&lt;br>— Jan Tschichold &lt;a href="https://t.co/gcv7SrhvJb">pic.twitter.com/gcv7SrhvJb&lt;/a>&lt;/p>&amp;mdash; Graphic Design History (@DesignReviewed) &lt;a href="https://twitter.com/DesignReviewed/status/1085870671291310081?ref_src=twsrc%5Etfw">January 17, 2019&lt;/a>&lt;/blockquote>
&lt;!-- raw HTML omitted -->
&lt;hr>
&lt;h2 id="vimeo-simple-shortcode">Vimeo Simple Shortcode&lt;/h2>
&lt;style>
.__h_video {
position: relative;
padding-bottom: 56.23%;
height: 0;
overflow: hidden;
width: 100%;
background: #000;
}
.__h_video img {
width: 100%;
height: auto;
color: #000;
}
.__h_video .play {
height: 72px;
width: 72px;
left: 50%;
top: 50%;
margin-left: -36px;
margin-top: -36px;
position: absolute;
cursor: pointer;
}
&lt;/style>
&lt;div class="s_video_simple __h_video">
&lt;a href="https://vimeo.com/4.8912912e&amp;#43;07" rel="noopener" target="_blank">
&lt;img src="https://i.vimeocdn.com/video/337401969_640" srcset="https://i.vimeocdn.com/video/337401969_640 1x, https://i.vimeocdn.com/video/337401969_640 2x" alt="Sing Jan Swing - Kinetic Type">
&lt;div class="play">&lt;svg version="1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 61 61">&lt;circle cx="30.5" cy="30.5" r="30.5" opacity=".8" fill="#000">&lt;/circle>&lt;path d="M25.3 19.2c-2.1-1.2-3.8-.2-3.8 2.2v18.1c0 2.4 1.7 3.4 3.8 2.2l16.6-9.1c2.1-1.2 2.1-3.2 0-4.4l-16.6-9z" fill="#fff">&lt;/path>&lt;/svg>&lt;/div>&lt;/a>&lt;/div></description></item><item><title>Placeholder Text</title><link>http://dev-J-Ariza.github.io/p/placeholder-text/</link><pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/placeholder-text/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash.jpg" alt="Featured image of post Placeholder Text" />&lt;p>Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p>
&lt;p>Redit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.&lt;/p>
&lt;ol>
&lt;li>Exierant elisi ambit vivere dedere&lt;/li>
&lt;li>Duce pollice&lt;/li>
&lt;li>Eris modo&lt;/li>
&lt;li>Spargitque ferrea quos palude&lt;/li>
&lt;/ol>
&lt;p>Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.&lt;/p>
&lt;ol>
&lt;li>Comas hunc haec pietate fetum procerum dixit&lt;/li>
&lt;li>Post torum vates letum Tiresia&lt;/li>
&lt;li>Flumen querellas&lt;/li>
&lt;li>Arcanaque montibus omnes&lt;/li>
&lt;li>Quidem et&lt;/li>
&lt;/ol>
&lt;h1 id="vagus-elidunt">Vagus elidunt&lt;/h1>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;a class="link" href="https://en.wikipedia.org/wiki/Canons_of_page_construction#Van_de_Graaf_canon" target="_blank" rel="noopener"
>The Van de Graaf Canon&lt;/a>&lt;/p>
&lt;h2 id="mane-refeci-capiebant-unda-mulcebat">Mane refeci capiebant unda mulcebat&lt;/h2>
&lt;p>Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. &lt;strong>Faces illo pepulere&lt;/strong> tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.&lt;/p>
&lt;p>Iubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.&lt;/p>
&lt;p>Eurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel &lt;strong>mitis temploque&lt;/strong> vocatus, inque alis, &lt;em>oculos nomen&lt;/em> non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides &lt;strong>parte&lt;/strong>.&lt;/p></description></item><item><title>Math Typesetting</title><link>http://dev-J-Ariza.github.io/p/math-typesetting/</link><pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/math-typesetting/</guid><description>&lt;p>Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p>
&lt;p>In this example we will be using &lt;a class="link" href="https://katex.org/" target="_blank" rel="noopener"
>KaTeX&lt;/a>&lt;/p>
&lt;ul>
&lt;li>Create a partial under &lt;code>/layouts/partials/math.html&lt;/code>&lt;/li>
&lt;li>Within this partial reference the &lt;a class="link" href="https://katex.org/docs/autorender.html" target="_blank" rel="noopener"
>Auto-render Extension&lt;/a> or host these scripts locally.&lt;/li>
&lt;li>Include the partial in your templates like so:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="o">{{&lt;/span> &lt;span class="k">if&lt;/span> or .Params.math .Site.Params.math &lt;span class="o">}}&lt;/span>
&lt;span class="o">{{&lt;/span> partial &lt;span class="s2">&amp;#34;math.html&amp;#34;&lt;/span> . &lt;span class="o">}}&lt;/span>
&lt;span class="o">{{&lt;/span> end &lt;span class="o">}}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>To enable KaTex globally set the parameter &lt;code>math&lt;/code> to &lt;code>true&lt;/code> in a project&amp;rsquo;s configuration&lt;/li>
&lt;li>To enable KaTex on a per page basis include the parameter &lt;code>math: true&lt;/code> in content files&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Note:&lt;/strong> Use the online reference of &lt;a class="link" href="https://katex.org/docs/supported.html" target="_blank" rel="noopener"
>Supported TeX Functions&lt;/a>&lt;/p>
&lt;h3 id="examples">Examples&lt;/h3>
&lt;p>Block math:
$$
\varphi = 1+\frac{1} {1+\frac{1} {1+\frac{1} {1+\cdots} } }
$$&lt;/p></description></item><item><title>Emoji Support</title><link>http://dev-J-Ariza.github.io/p/emoji-support/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>http://dev-J-Ariza.github.io/p/emoji-support/</guid><description>&lt;img src="http://dev-J-Ariza.github.io/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash.jpg" alt="Featured image of post Emoji Support" />&lt;p>Emoji can be enabled in a Hugo project in a number of ways.&lt;/p>
&lt;p>The &lt;a class="link" href="https://gohugo.io/functions/emojify/" target="_blank" rel="noopener"
>&lt;code>emojify&lt;/code>&lt;/a> function can be called directly in templates or &lt;a class="link" href="https://gohugo.io/templates/shortcode-templates/#inline-shortcodes" target="_blank" rel="noopener"
>Inline Shortcodes&lt;/a>.&lt;/p>
&lt;p>To enable emoji globally, set &lt;code>enableEmoji&lt;/code> to &lt;code>true&lt;/code> in your site&amp;rsquo;s &lt;a class="link" href="https://gohugo.io/getting-started/configuration/" target="_blank" rel="noopener"
>configuration&lt;/a> and then you can type emoji shorthand codes directly in content files; e.g.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>The &lt;a class="link" href="http://www.emoji-cheat-sheet.com/" target="_blank" rel="noopener"
>Emoji cheat sheet&lt;/a> is a useful reference for emoji shorthand codes.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>N.B.&lt;/strong> The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">.emoji {
font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols;
}&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>